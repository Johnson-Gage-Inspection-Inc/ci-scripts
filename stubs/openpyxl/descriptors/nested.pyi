from .base import Bool as Bool, Convertible as Convertible, Descriptor as Descriptor, Float as Float, Integer as Integer, MinMax as MinMax, NoneSet as NoneSet, Set as Set, String as String
from _typeshed import Incomplete
from openpyxl.compat import safe_string as safe_string
from openpyxl.xml.functions import Element as Element, localname as localname, whitespace as whitespace

class Nested(Descriptor):
    nested: bool
    attribute: str
    def __set__(self, instance, value) -> None: ...
    def from_tree(self, node): ...
    def to_tree(self, tagname: Incomplete | None = None, value: Incomplete | None = None, namespace: Incomplete | None = None): ...

class NestedValue(Nested, Convertible): ...

class NestedText(NestedValue):
    def from_tree(self, node): ...
    def to_tree(self, tagname: Incomplete | None = None, value: Incomplete | None = None, namespace: Incomplete | None = None): ...

class NestedFloat(NestedValue, Float): ...
class NestedInteger(NestedValue, Integer): ...
class NestedString(NestedValue, String): ...

class NestedBool(NestedValue, Bool):
    def from_tree(self, node): ...

class NestedNoneSet(Nested, NoneSet): ...
class NestedSet(Nested, Set): ...
class NestedMinMax(Nested, MinMax): ...

class EmptyTag(Nested, Bool):
    def from_tree(self, node): ...
    def to_tree(self, tagname: Incomplete | None = None, value: Incomplete | None = None, namespace: Incomplete | None = None): ...
