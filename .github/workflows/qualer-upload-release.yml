name: Upload & Release on Merge

on:
  workflow_call:
    inputs:
      ENV_FILE_PATH:
        required: false
        type: string
        default: ".env"
      repo_name:
        required: true
        type: string
      branch:
        required: false
        type: string
        default: "main"
    secrets:
      QUALER_EMAIL:
        required: true
      QUALER_PASSWORD:
        required: true

jobs:
  validate-excel:
    runs-on: ubuntu-latest
    outputs:
      EXCEL_FILE: ${{ steps.set-excel-file.outputs.EXCEL_FILE }}
      UPLOAD: ${{ steps.set-excel-file.outputs.UPLOAD }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Load environment variables
        run: |
          if [ -f "${{ inputs.ENV_FILE_PATH }}" ]; then
            echo "Loading environment variables from ${{ inputs.ENV_FILE_PATH }}"
            cat "${{ inputs.ENV_FILE_PATH }}" >> $GITHUB_ENV
          else
            echo "Warning: .env file not found"
          fi

      - name: Validate required environment variables
        run: |
          REQUIRED_VARS=("SOP_ID" "DOC_ID" "DOC_TITLE" "DOC_DETAILS")
          MISSING_VARS=()
          
          for VAR in "${REQUIRED_VARS[@]}"; do
            if [[ -z "${!VAR}" ]]; then
              MISSING_VARS+=("$VAR")
            fi
          done

          if [[ ${#MISSING_VARS[@]} -ne 0 ]]; then
            echo "Error: Missing required environment variables: ${MISSING_VARS[*]}"
            exit 1
          fi

      - name: Validate Secrets
        run: |
          if [[ -z "${{ secrets.QUALER_EMAIL }}" || -z "${{ secrets.QUALER_PASSWORD }}" ]]; then
            echo "❌ Missing required secrets."
            exit 1
          fi

      - name: Fetch remote branch
        run: git fetch origin ${{ inputs.branch }}

      - name: Capture Excel File Changes
        id: capture_changes
        run: |
          git fetch --unshallow origin main
          git diff --name-status HEAD~1 HEAD | grep -E '\.xl' > changed_files.txt || true
          cat changed_files.txt  # Debugging step


      - name: Count and Validate Excel Files
        id: set-excel-file
        run: |
            EXCEL_COUNT=$(find . -type f -iname "*.xl*" | wc -l)
            echo "Excel files found: $EXCEL_COUNT"

            if [ "$EXCEL_COUNT" -eq 0 ]; then
              echo "✅ No Excel files found. Exiting without error."
            elif [ "$EXCEL_COUNT" -eq 1 ]; then
              if ! [ -s changed_files.txt ]; then
                echo "✅ No Excel files changed. Exiting without error."
              else
                EXCEL_FILE=$(find . -type f -iname "*.xls*" | head -n 1)
                echo "✅ Using Excel file: $EXCEL_FILE"
                echo "EXCEL_FILE=$EXCEL_FILE" >> $GITHUB_OUTPUT
                echo "UPLOAD=true" >> $GITHUB_OUTPUT
              fi
            fi

  validate-qualer-upload:
    needs: validate-excel
    if: needs.validate-excel.outputs.UPLOAD == 'true'
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Load environment variables
        run: |
          echo "Loading environment variables from ${{ inputs.ENV_FILE_PATH }}"
          cat "${{ inputs.ENV_FILE_PATH }}" >> $GITHUB_ENV

      - name: Checkout `ci-scripts` Repository
        uses: actions/checkout@v3
        with:
          repository: Johnson-Gage-Inspection-Inc/ci-scripts
          path: ci-scripts
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Short Commit Hash
        id: get-commit-hash
        run: echo "COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

      - name: Ensure `upload_sop.sh` is Executable
        run: chmod +x ./ci-scripts/upload_sop.sh

      - name: Run Upload Script
        run: ./ci-scripts/upload_sop.sh
        env:
          QUALER_EMAIL: ${{ secrets.QUALER_EMAIL }}
          QUALER_PASSWORD: ${{ secrets.QUALER_PASSWORD }}
          EXCEL_FILE: ${{ needs.validate-excel.outputs.EXCEL_FILE }}
          COMMIT_HASH: ${{ env.COMMIT_HASH }}
          AUTHOR_NAME: ${{ github.actor }}
