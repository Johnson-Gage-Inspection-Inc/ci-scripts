name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Format check with black
      run: |
        black --check --diff .

    - name: Type check with mypy
      run: |
        mypy check_excel_refs.py update_excel_metadata.py --ignore-missing-imports --disable-error-code=import-untyped --pretty
      continue-on-error: false

    - name: Test with pytest
      env:
        GITHUB_TOKEN: ${{ secrets.INTEGRATION_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
      run: |
        # Only run integration tests on Python 3.11 to avoid parallel PR creation
        if [ "${{ matrix.python-version }}" = "3.11" ]; then
          export SKIP_INTEGRATION=false
          echo "Running integration tests on Python 3.11"
          echo "GITHUB_TOKEN is set: $([[ -n \"$GITHUB_TOKEN\" ]] && echo 'yes' || echo 'no')"
          echo "Using integration token: $([[ -n \"${{ secrets.INTEGRATION_GITHUB_TOKEN }}\" ]] && echo 'yes' || echo 'no')"
          echo "SKIP_INTEGRATION=$SKIP_INTEGRATION"
        else
          export SKIP_INTEGRATION=true
          echo "Skipping integration tests on Python ${{ matrix.python-version }}"
          echo "SKIP_INTEGRATION=$SKIP_INTEGRATION"
        fi
        pytest --cov=. --cov-report=xml --cov-report=term-missing -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
