name: Pre-Merge Validation

on:
  workflow_call:
    inputs:
      ENV_FILE_PATH:
        required: false
        type: string
        default: ".env"
      repo_name:
        required: true
        type: string
      branch:
        required: false
        type: string
        default: "main"
    secrets:
      QUALER_EMAIL:
        required: true
      QUALER_PASSWORD:
        required: true

jobs:
  validate-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Short Commit Hash
        run: echo "COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV
  
      - name: Load environment variables
        run: |
          if [ -f "${{ inputs.ENV_FILE_PATH }}" ]; then
            echo "Loading environment variables from ${{ inputs.ENV_FILE_PATH }}"
            cat "${{ inputs.ENV_FILE_PATH }}" >> $GITHUB_ENV
          else
            echo "Warning: .env file not found"
          fi

      - name: Display environment variables (for debugging)
        run: env | sort

      - name: Validate required environment variables
        run: |
          REQUIRED_VARS=("SOP_ID" "DOC_ID" "DOC_TITLE" "DOC_DETAILS")
          MISSING_VARS=()
          
          for VAR in "${REQUIRED_VARS[@]}"; do
            if [[ -z "${!VAR}" ]]; then
              MISSING_VARS+=("$VAR")
            fi
          done

          if [[ ${#MISSING_VARS[@]} -ne 0 ]]; then
            echo "Error: Missing required environment variables: ${MISSING_VARS[*]}"
            exit 1
          fi

      - name: Validate Secrets
        run: |
          if [[ -z "${{ secrets.QUALER_EMAIL }}" || -z "${{ secrets.QUALER_PASSWORD }}" ]]; then
            echo "❌ Missing required secrets."
            exit 1
          fi

      - name: Debug - show files in the current directory
        run: ls -al

      - name: Debug - show all excel files ("*.xl...")
        run: find -type f -name "*.xl*"

      - name: Count Excel files
        run: |
            EXCEL_COUNT=$(find . -type f -iname "*.xls*" | wc -l)
            echo "Excel files found: $EXCEL_COUNT"
            echo "EXCEL_COUNT=$EXCEL_COUNT" >> $GITHUB_ENV
            
      - name: Fetch remote branch
        run: git fetch origin ${{ inputs.branch }}

      - name: Handle Excel file count
        run: |
            if [ "$EXCEL_COUNT" -eq 0 ]; then
              if git diff --name-status origin/${{ inputs.branch }} HEAD --diff-filter=D | grep -E '\.xl'; then
                echo "❌ The Excel file was deleted. PR must not delete the Excel file."
                exit 1
              fi
              echo "✅ No Excel files found. Exiting without error."
              exit 0
            elif [ "$EXCEL_COUNT" -eq 1 ]; then
              EXCEL_FILE=$(find . -type f -iname "*.xls*" | head -n 1)
              echo "✅ Using Excel file: $EXCEL_FILE"
              echo "EXCEL_FILE=$EXCEL_FILE" >> $GITHUB_ENV
            else
              echo "❌ More than one Excel file found! Exiting with error."
              exit 1
            fi

      - name: Capture Excel File Changes
        id: capture_changes
        run: |
          git diff --name-status origin/${{ inputs.branch }} HEAD | grep -E '\.xl' > changed_files.txt || true
          cat changed_files.txt  # Debugging step to print the file contents

      - name: Check if Any Excel Files Were Changed
        id: check
        run: |
          if ! [ -s changed_files.txt ]; then
            echo "✅ No Excel files changed. Skipping validation."
            exit 0
          fi

      - name: Checkout `ci-scripts` Repository
        uses: actions/checkout@v3
        with:
          repository: Johnson-Gage-Inspection-Inc/ci-scripts
          path: ci-scripts
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Ensure `validate_upload.sh` is Executable
        run: chmod +x ./ci-scripts/validate_upload.sh

      - name: Run Upload Validation
        if: env.skip != 'true'
        run: ./ci-scripts/validate_upload.sh
        env:
          QUALER_EMAIL: ${{ secrets.QUALER_EMAIL }}
          QUALER_PASSWORD: ${{ secrets.QUALER_PASSWORD }}
          MERGED_FILE: ${{ env.EXCEL_FILE }}
          COMMIT_HASH: ${{ env.COMMIT_HASH }}
